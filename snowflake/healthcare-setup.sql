USE ROLE ACCOUNTADMIN;
USE WAREHOUSE COMPUTE_WH;

-- CREATE DATABASES AND SCHEMAS W/ MEDALLION STRUCTURE
CREATE OR REPLACE DATABASE HEALTHCARE_ANALYTICS;
CREATE OR REPLACE SCHEMA HEALTHCARE_ANALYTICS.BRONZE;
CREATE OR REPLACE SCHEMA HEALTHCARE_ANALYTICS.SILVER;
CREATE OR REPLACE SCHEMA HEALTHCARE_ANALYTICS.GOLD;

-- CREATE SNOWFLAKE INTEGRATION WITH S3
CREATE OR REPLACE STORAGE INTEGRATION SNOWFLAKE_S3_INTEGRATION
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = 'S3'
    ENABLED = TRUE
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::599192675813:role/healthcare-lambda-gdrive-s3-execution-role'
    STORAGE_ALLOWED_LOCATIONS = ('s3://healthcare-data-lake-dea-2025/data/');

DESC INTEGRATION SNOWFLAKE_S3_INTEGRATION;

-- CREATE FILE FORMAT THAT HANDLES COLUMN COUNT MISMATCHES
CREATE OR REPLACE FILE FORMAT HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR
    TYPE = 'CSV'
    FIELD_DELIMITER = ','
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    SKIP_HEADER = 1
    ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE;

-- CREATE STAGE LINKED TO S3 DATA
CREATE OR REPLACE STAGE HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE
    URL = 's3://healthcare-data-lake-dea-2025/data/'
    CREDENTIALS = (
        AWS_KEY_ID = 'AKIAYXAVKUXS4B2PNQ66',
        AWS_SECRET_KEY = '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'
    )
    FILE_FORMAT = HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR;

-- CREATE STAGE FOR LAMBDA STATE FILE
CREATE OR REPLACE STAGE HEALTHCARE_ANALYTICS.BRONZE.STATE_STAGE
    URL = 's3://healthcare-data-lake-dea-2025/state/'
    CREDENTIALS = (
        AWS_KEY_ID = 'AKIAYXAVKUXS4B2PNQ66',
        AWS_SECRET_KEY = 'RY5vrlk0bvBaVrgQtpbYFLvv+zYNDW28Nd2mTIl8'
    )
    FILE_FORMAT = (TYPE = 'JSON');

-- TEST STAGES
LIST @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE;
SELECT parse_json($1):last_pipeline_run FROM @HEALTHCARE_ANALYTICS.BRONZE.STATE_STAGE/last_run_state.json;

-- CREATE BRONZE TABLES
CREATE OR REPLACE TABLE HEALTHCARE_ANALYTICS.BRONZE.PBJ_Daily_Nurse_Staffing_Q2_2024 (
    PROVNUM VARCHAR(10),
    PROVNAME VARCHAR(100),
    CITY VARCHAR (50),
    STATE VARCHAR(2),
    COUNTY_NAME VARCHAR(50),
    COUNTY_FIPS NUMBER(10,2),
    CY_Qtr VARCHAR(8),
    WORKDATE DATE,
    MDSCENSUS NUMBER,
    HRS_RNDON NUMBER(10,2),
    HRS_RNDON_tmp NUMBER(10,2),
    HRS_RNDON_ctr NUMBER(10,2),
    HRS_RNADMIN NUMBER(10,2),
    HRS_RNADMIN_emp NUMBER(10,2),
    HRS_RNADMIN_ctr NUMBER(10,2),
    HRS_RN NUMBER(10,2),
    HRS_RN_emp NUMBER(10,2),
    HRS_RN_ctr NUMBER(10,2),
    HRS_LPNADMIN NUMBER(10,2),
    HRS_LPNADMIN_emp NUMBER(10,2),
    HRS_LPNADMIN_ctr NUMBER(10,2),
    HRS_LPN NUMBER(10,2),
    HRS_LPN_emp NUMBER(10,2),
    HRS_LPN_ctr NUMBER(10,2),
    HRS_CNA NUMBER(10,2),
    HRS_CNA_emp NUMBER(10,2), 
    HRS_CNA_ctr NUMBER(10,2),
    HRS_NATRN NUMBER(10,2),
    HRS_NATRN_emp NUMBER(10,2),
    HRS_NATRN_ctr NUMBER(10,2),
    HRS_MEDAIDE NUMBER(10,2),
    HRS_MEDAIDE_emp NUMBER(10,2),
    HRS_MEDAIDE_ctr NUMBER(10,2),
    LOAD_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE HEALTHCARE_ANALYTICS.BRONZE.FY_2024_SNF_VBP_Aggregate_Performance (
    COL1 NUMBER(10,5),
    COL2 NUMBER(10,5), 
    COL3 NUMBER(10,5),
    COL4 NUMBER(10,5),
    COL5 VARCHAR(50),
    COL6 NUMBER(10,0),
    COL7 NUMBER(15,10),
    COL8 VARCHAR(100),
    COL9 VARCHAR(100),
    COL10 VARCHAR(100),
    LOAD_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE HEALTHCARE_ANALYTICS.BRONZE.FY_2024_SNF_VBP_Facility_Performance (
    COL1 VARCHAR(100), COL2 VARCHAR(100), COL3 VARCHAR(100), COL4 VARCHAR(100), COL5 VARCHAR(100),
    COL6 VARCHAR(100), COL7 VARCHAR(100), COL8 VARCHAR(100), COL9 VARCHAR(100), COL10 VARCHAR(100),
    LOAD_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE HEALTHCARE_ANALYTICS.BRONZE.NH_QualityMsr_Claims_Oct2024 (
    COL1 VARCHAR(100), COL2 VARCHAR(100), COL3 VARCHAR(100), COL4 VARCHAR(100), COL5 VARCHAR(100),
    COL6 VARCHAR(100), COL7 VARCHAR(100), COL8 VARCHAR(100), COL9 VARCHAR(100), COL10 VARCHAR(100),
    LOAD_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE HEALTHCARE_ANALYTICS.BRONZE.NH_QualityMsr_MDS_Oct2024 (
    COL1 VARCHAR(100), COL2 VARCHAR(100), COL3 VARCHAR(100), COL4 VARCHAR(100), COL5 VARCHAR(100),
    COL6 VARCHAR(100), COL7 VARCHAR(100), COL8 VARCHAR(100), COL9 VARCHAR(100), COL10 VARCHAR(100),
    LOAD_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

CREATE OR REPLACE TABLE HEALTHCARE_ANALYTICS.BRONZE.NH_StateUSAverages_Oct2024 (
    COL1 VARCHAR(100), COL2 VARCHAR(100), COL3 VARCHAR(100), COL4 VARCHAR(100), COL5 VARCHAR(100),
    COL6 VARCHAR(100), COL7 VARCHAR(100), COL8 VARCHAR(100), COL9 VARCHAR(100), COL10 VARCHAR(100),
    LOAD_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

-- INITIAL DATA LOAD
COPY INTO HEALTHCARE_ANALYTICS.BRONZE.PBJ_Daily_Nurse_Staffing_Q2_2024
FROM (
    SELECT
        t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7, t.$8, t.$9,
        t.$10, t.$11, t.$12, t.$13, t.$14, t.$15, t.$16, t.$17,
        t.$18, t.$19, t.$20, t.$21, t.$22, t.$23, t.$24, t.$25,
        t.$26, t.$27, t.$28, t.$29, t.$30, t.$31, t.$32, t.$33, t.$34
    FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/PBJ_Daily_Nurse_Staffing_Q2_2024.csv
    (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t
)
ON_ERROR = 'CONTINUE';

COPY INTO HEALTHCARE_ANALYTICS.BRONZE.FY_2024_SNF_VBP_Aggregate_Performance
    (COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8, COL9, COL10)
FROM (
    SELECT
        TRY_CAST(t.$1 AS NUMBER(10,5)), TRY_CAST(t.$2 AS NUMBER(10,5)),
        TRY_CAST(t.$3 AS NUMBER(10,5)), TRY_CAST(t.$4 AS NUMBER(10,5)),
        t.$5, TRY_CAST(t.$6 AS NUMBER(10,0)), TRY_CAST(t.$7 AS NUMBER(15,10)),
        t.$8, t.$9, t.$10
    FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/FY_2024_SNF_VBP_Aggregate_Performance.csv
    (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t
)
ON_ERROR = 'CONTINUE';

COPY INTO HEALTHCARE_ANALYTICS.BRONZE.FY_2024_SNF_VBP_Facility_Performance (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/FY_2024_SNF_VBP_Facility_Performance.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

COPY INTO HEALTHCARE_ANALYTICS.BRONZE.NH_QualityMsr_Claims_Oct2024 (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/NH_QualityMsr_Claims_Oct2024.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

COPY INTO HEALTHCARE_ANALYTICS.BRONZE.NH_QualityMsr_MDS_Oct2024 (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/NH_QualityMsr_MDS_Oct2024.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

COPY INTO HEALTHCARE_ANALYTICS.BRONZE.NH_StateUSAverages_Oct2024 (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/NH_StateUSAverages_Oct2024.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

-- CREATE SNOWPIPES FOR AUTOMATION
CREATE OR REPLACE PIPE HEALTHCARE_ANALYTICS.BRONZE.pbj_staffing_pipe
AUTO_INGEST = TRUE
AS
COPY INTO HEALTHCARE_ANALYTICS.BRONZE.PBJ_Daily_Nurse_Staffing_Q2_2024
FROM (
    SELECT
        t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7, t.$8, t.$9,
        t.$10, t.$11, t.$12, t.$13, t.$14, t.$15, t.$16, t.$17,
        t.$18, t.$19, t.$20, t.$21, t.$22, t.$23, t.$24, t.$25,
        t.$26, t.$27, t.$28, t.$29, t.$30, t.$31, t.$32, t.$33, t.$34
    FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/PBJ_Daily_Nurse_Staffing_Q2_2024.csv
    (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t
)
ON_ERROR = 'CONTINUE';

CREATE OR REPLACE PIPE HEALTHCARE_ANALYTICS.BRONZE.vbp_aggregate_pipe
AUTO_INGEST = TRUE
AS
COPY INTO HEALTHCARE_ANALYTICS.BRONZE.FY_2024_SNF_VBP_Aggregate_Performance
    (COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8, COL9, COL10)
FROM (
    SELECT
        TRY_CAST(t.$1 AS NUMBER(10,5)), TRY_CAST(t.$2 AS NUMBER(10,5)),
        TRY_CAST(t.$3 AS NUMBER(10,5)), TRY_CAST(t.$4 AS NUMBER(10,5)),
        t.$5, TRY_CAST(t.$6 AS NUMBER(10,0)), TRY_CAST(t.$7 AS NUMBER(15,10)),
        t.$8, t.$9, t.$10
    FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/FY_2024_SNF_VBP_Aggregate_Performance.csv
    (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t
)
ON_ERROR = 'CONTINUE';

CREATE OR REPLACE PIPE HEALTHCARE_ANALYTICS.BRONZE.vbp_facility_pipe
AUTO_INGEST = TRUE
AS
COPY INTO HEALTHCARE_ANALYTICS.BRONZE.FY_2024_SNF_VBP_Facility_Performance (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/FY_2024_SNF_VBP_Facility_Performance.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

CREATE OR REPLACE PIPE HEALTHCARE_ANALYTICS.BRONZE.quality_claims_pipe
AUTO_INGEST = TRUE
AS
COPY INTO HEALTHCARE_ANALYTICS.BRONZE.NH_QualityMsr_Claims_Oct2024 (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/NH_QualityMsr_Claims_Oct2024.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

CREATE OR REPLACE PIPE HEALTHCARE_ANALYTICS.BRONZE.quality_mds_pipe
AUTO_INGEST = TRUE
AS
COPY INTO HEALTHCARE_ANALYTICS.BRONZE.NH_QualityMsr_MDS_Oct2024 (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/NH_QualityMsr_MDS_Oct2024.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

CREATE OR REPLACE PIPE HEALTHCARE_ANALYTICS.BRONZE.state_averages_pipe
AUTO_INGEST = TRUE
AS
COPY INTO HEALTHCARE_ANALYTICS.BRONZE.NH_StateUSAverages_Oct2024 (COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10)
FROM (SELECT t.$1,t.$2,t.$3,t.$4,t.$5,t.$6,t.$7,t.$8,t.$9,t.$10 FROM @HEALTHCARE_ANALYTICS.BRONZE.S3_HEALTHCARE_STAGE/NH_StateUSAverages_Oct2024.csv (FILE_FORMAT => HEALTHCARE_ANALYTICS.BRONZE.CSV_FORMAT_NO_ERROR) t)
ON_ERROR = 'CONTINUE';

-- CREATE PIPELINE LOG TABLE
CREATE OR REPLACE TABLE HEALTHCARE_ANALYTICS.BRONZE.PIPELINE_LOG (
    LOG_TIME TIMESTAMP,
    PROCESS_TYPE STRING,
    STATUS STRING,
    MESSAGE STRING
);

-- WORKING STORED PROCEDURE - USING COMPLETELY SAFE VARIABLE NAMES
DROP PROCEDURE IF EXISTS HEALTHCARE_ANALYTICS.BRONZE.PROCESS_BRONZE_REFRESH();

CREATE OR REPLACE PROCEDURE HEALTHCARE_ANALYTICS.BRONZE.PROCESS_BRONZE_REFRESH()
RETURNS STRING
LANGUAGE SQL
AS
$$
DECLARE
    json_val VARIANT;
    time_val TIMESTAMP;
    now_val TIMESTAMP := CURRENT_TIMESTAMP();
    text_val STRING := '';
    int_val INTEGER := 0;
BEGIN
    SELECT parse_json($1) INTO json_val 
    FROM @HEALTHCARE_ANALYTICS.BRONZE.STATE_STAGE/last_run_state.json LIMIT 1;
    
    time_val := TO_TIMESTAMP(json_val:last_pipeline_run::STRING);
    
    IF (DATEDIFF('minute', time_val, now_val) < 120) THEN
        text_val := 'Lambda data found. Last run: ' || time_val;
        int_val := 1;
        
        INSERT INTO HEALTHCARE_ANALYTICS.BRONZE.PIPELINE_LOG 
        VALUES (CURRENT_TIMESTAMP(), 'BRONZE_REFRESH', 'SUCCESS', text_val);
    ELSE
        text_val := 'No recent Lambda data. Last run: ' || time_val;
        INSERT INTO HEALTHCARE_ANALYTICS.BRONZE.PIPELINE_LOG 
        VALUES (CURRENT_TIMESTAMP(), 'BRONZE_CHECK', 'SKIPPED', text_val);
    END IF;
    
    RETURN text_val;
END;
$$;

-- CREATE SCHEDULED TASK
CREATE OR REPLACE TASK HEALTHCARE_ANALYTICS.BRONZE.MASTER_REFRESH_TASK
WAREHOUSE = 'COMPUTE_WH'
SCHEDULE = 'USING CRON 15 2,3,4,5 * * * America/New_York'
AS
CALL HEALTHCARE_ANALYTICS.BRONZE.PROCESS_BRONZE_REFRESH();

-- RESUME THE TASK
ALTER TASK HEALTHCARE_ANALYTICS.BRONZE.MASTER_REFRESH_TASK RESUME;
